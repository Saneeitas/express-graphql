const { Friends, Series } = require('../db/dbConnector.js');

/**
 * GraphQL Resolvers
 **/

const resolvers = {
    Query: {
        getAllFriend: async (root) => {
            try {
                const friends = await Friends.find().exec();
                return friends;
            } catch (err) {
                throw err;
            }
        },
        findASeries: async (root, { id }) => {
            try {
                const series = await Series.findOne({ _id: id }).exec();
                return series;
            } catch (err) {
                throw err;
            }
        },

    },
    Mutation: {
        createFriend: (root, { input }) => {
            const newFriend = new Friends({
                firstName: input.firstName,
                lastName: input.lastName,
                gender: input.gender,
                language: input.language,
                age: input.age,
                email: input.email,
                contacts: input.contacts,
            });

            newFriend.id = newFriend._id;

          return newFriend.save()
            .then(savedFriend => {
                return savedFriend; 
            })
            .catch(err => {
                throw err; 
            });

        },
        addASeries: (root, { series }) => {
            const newSeries = new Series({
                seriesName: series.seriesName,
                year: series.year,
                rating: series.rating,
            });

            newSeries.id = series._id;

            return newSeries.save()
                .then(savedSeries => {
                    return savedSeries; 
                })
                .catch(err => {
                    throw err;
                });

        },
    },
};

module.exports = { resolvers };
